{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-routing/src/contexts.js","../../node_modules/svelte-routing/src/history.js","../../node_modules/svelte-routing/src/utils.js","../../node_modules/svelte-routing/src/Router.svelte","../../node_modules/svelte-routing/src/Route.svelte","../../node_modules/svelte-routing/src/Link.svelte","../../src/components/Nav.svelte","../../src/stores.ts","../../node_modules/engine.io-parser/build/esm/commons.js","../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/index.js","../../node_modules/@socket.io/component-emitter/index.mjs","../../node_modules/engine.io-client/build/esm/globalThis.browser.js","../../node_modules/engine.io-client/build/esm/util.js","../../node_modules/engine.io-client/build/esm/transport.js","../../node_modules/engine.io-client/build/esm/contrib/yeast.js","../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../../node_modules/engine.io-client/build/esm/transports/polling.js","../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../node_modules/engine.io-client/build/esm/transports/index.js","../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../node_modules/engine.io-client/build/esm/socket.js","../../node_modules/socket.io-parser/build/esm/is-binary.js","../../node_modules/socket.io-parser/build/esm/binary.js","../../node_modules/socket.io-parser/build/esm/index.js","../../node_modules/socket.io-client/build/esm/on.js","../../node_modules/socket.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../node_modules/socket.io-client/build/esm/manager.js","../../node_modules/socket.io-client/build/esm/index.js","../../node_modules/socket.io-client/build/esm/url.js","../../src/components/Match.svelte","../../src/pages/Main.svelte","../../src/components/EditableMatch.svelte","../../src/pages/Judge.svelte","../../src/pages/Login.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.55.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export const LOCATION = {};\nexport const ROUTER = {};\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nfunction getLocation(source) {\n  return {\n    ...source.location,\n    state: source.history.state,\n    key: (source.history.state && source.history.state.key) || \"initial\"\n  };\n}\n\nfunction createHistory(source, options) {\n  const listeners = [];\n  let location = getLocation(source);\n\n  return {\n    get location() {\n      return location;\n    },\n\n    listen(listener) {\n      listeners.push(listener);\n\n      const popstateListener = () => {\n        location = getLocation(source);\n        listener({ location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return () => {\n        source.removeEventListener(\"popstate\", popstateListener);\n\n        const index = listeners.indexOf(listener);\n        listeners.splice(index, 1);\n      };\n    },\n\n    navigate(to, { state, replace = false } = {}) {\n      state = { ...state, key: Date.now() + \"\" };\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      listeners.forEach(listener => listener({ location, action: \"PUSH\" }));\n    }\n  };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n  let index = 0;\n  const stack = [{ pathname: initialPathname, search: \"\" }];\n  const states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener(name, fn) {},\n    removeEventListener(name, fn) {},\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        index++;\n        stack.push({ pathname, search });\n        states.push(state);\n      },\n      replaceState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        stack[index] = { pathname, search };\n        states[index] = state;\n      }\n    }\n  };\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = Boolean(\n  typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n);\nconst globalHistory = createHistory(canUseDOM ? window : createMemorySource());\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nconst paramRe = /^:(.+)/;\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n}\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isRootSegment(segment) {\n  return segment === \"\";\n}\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isDynamic(segment) {\n  return paramRe.test(segment);\n}\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nfunction isSplat(segment) {\n  return segment[0] === \"*\";\n}\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nfunction segmentize(uri) {\n  return (\n    uri\n      // Strip starting/ending `/`\n      .replace(/(^\\/+|\\/+$)/g, \"\")\n      .split(\"/\")\n  );\n}\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nfunction stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n}\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nfunction rankRoute(route, index) {\n  const score = route.default\n    ? 0\n    : segmentize(route.path).reduce((score, segment) => {\n        score += SEGMENT_POINTS;\n\n        if (isRootSegment(segment)) {\n          score += ROOT_POINTS;\n        } else if (isDynamic(segment)) {\n          score += DYNAMIC_POINTS;\n        } else if (isSplat(segment)) {\n          score -= SEGMENT_POINTS + SPLAT_PENALTY;\n        } else {\n          score += STATIC_POINTS;\n        }\n\n        return score;\n      }, 0);\n\n  return { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nfunction rankRoutes(routes) {\n  return (\n    routes\n      .map(rankRoute)\n      // If two routes have the exact same score, we go by index instead\n      .sort((a, b) =>\n        a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n      )\n  );\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nfunction pick(routes, uri) {\n  let match;\n  let default_;\n\n  const [uriPathname] = uri.split(\"?\");\n  const uriSegments = segmentize(uriPathname);\n  const isRootUri = uriSegments[0] === \"\";\n  const ranked = rankRoutes(routes);\n\n  for (let i = 0, l = ranked.length; i < l; i++) {\n    const route = ranked[i].route;\n    let missed = false;\n\n    if (route.default) {\n      default_ = {\n        route,\n        params: {},\n        uri\n      };\n      continue;\n    }\n\n    const routeSegments = segmentize(route.path);\n    const params = {};\n    const max = Math.max(uriSegments.length, routeSegments.length);\n    let index = 0;\n\n    for (; index < max; index++) {\n      const routeSegment = routeSegments[index];\n      const uriSegment = uriSegments[index];\n\n      if (routeSegment !== undefined && isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/* or /files/*splatname\n        const splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n        params[splatName] = uriSegments\n          .slice(index)\n          .map(decodeURIComponent)\n          .join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      let dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        const value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route,\n        params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n}\n\n/**\n * Check if the `path` matches the `uri`.\n * @param {string} path\n * @param {string} uri\n * @return {?object}\n */\nfunction match(route, uri) {\n  return pick([route], uri);\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nfunction addQuery(pathname, query) {\n  return pathname + (query ? `?${query}` : \"\");\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nfunction resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  const [toPathname, toQuery] = to.split(\"?\");\n  const [basePathname] = base.split(\"?\");\n  const toSegments = segmentize(toPathname);\n  const baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    const pathname = baseSegments.concat(toSegments).join(\"/\");\n\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./       , /users/123 => /users/123\n  // ../      , /users/123 => /users\n  // ../..    , /users/123 => /\n  // ../../one, /a/b/c/d   => /a/b/one\n  // .././one , /a/b/c/d   => /a/b/c/one\n  const allSegments = baseSegments.concat(toSegments);\n  const segments = [];\n\n  allSegments.forEach(segment => {\n    if (segment === \"..\") {\n      segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n}\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nfunction combinePaths(basepath, path) {\n  return `${stripSlashes(\n    path === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n  )}/`;\n}\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nfunction shouldNavigate(event) {\n  return (\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nfunction hostMatches(anchor) {\n  const host = location.host\n  return (\n    anchor.host == host ||\n    // svelte seems to kill anchor.host value in ie11, so fall back to checking href\n    anchor.href.indexOf(`https://${host}`) === 0 ||\n    anchor.href.indexOf(`http://${host}`) === 0\n  )\n}\n\nexport { stripSlashes, pick, match, resolve, combinePaths, shouldNavigate, hostMatches };\n","<script>\n  import { getContext, setContext, onMount } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import { LOCATION, ROUTER } from \"./contexts.js\";\n  import { globalHistory } from \"./history.js\";\n  import { pick, match, stripSlashes, combinePaths } from \"./utils.js\";\n\n  export let basepath = \"/\";\n  export let url = null;\n\n  const locationContext = getContext(LOCATION);\n  const routerContext = getContext(ROUTER);\n\n  const routes = writable([]);\n  const activeRoute = writable(null);\n  let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n  // If locationContext is not set, this is the topmost Router in the tree.\n  // If the `url` prop is given we force the location to it.\n  const location =\n    locationContext ||\n    writable(url ? { pathname: url } : globalHistory.location);\n\n  // If routerContext is set, the routerBase of the parent Router\n  // will be the base for this Router's descendants.\n  // If routerContext is not set, the path and resolved uri will both\n  // have the value of the basepath prop.\n  const base = routerContext\n    ? routerContext.routerBase\n    : writable({\n        path: basepath,\n        uri: basepath\n      });\n\n  const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n    // If there is no activeRoute, the routerBase will be identical to the base.\n    if (activeRoute === null) {\n      return base;\n    }\n\n    const { path: basepath } = base;\n    const { route, uri } = activeRoute;\n    // Remove the potential /* or /*splatname from\n    // the end of the child Routes relative paths.\n    const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n\n    return { path, uri };\n  });\n\n  function registerRoute(route) {\n    const { path: basepath } = $base;\n    let { path } = route;\n\n    // We store the original path in the _path property so we can reuse\n    // it when the basepath changes. The only thing that matters is that\n    // the route reference is intact, so mutation is fine.\n    route._path = path;\n    route.path = combinePaths(basepath, path);\n\n    if (typeof window === \"undefined\") {\n      // In SSR we should set the activeRoute immediately if it is a match.\n      // If there are more Routes being registered after a match is found,\n      // we just skip them.\n      if (hasActiveRoute) {\n        return;\n      }\n\n      const matchingRoute = match(route, $location.pathname);\n      if (matchingRoute) {\n        activeRoute.set(matchingRoute);\n        hasActiveRoute = true;\n      }\n    } else {\n      routes.update(rs => {\n        rs.push(route);\n        return rs;\n      });\n    }\n  }\n\n  function unregisterRoute(route) {\n    routes.update(rs => {\n      const index = rs.indexOf(route);\n      rs.splice(index, 1);\n      return rs;\n    });\n  }\n\n  // This reactive statement will update all the Routes' path when\n  // the basepath changes.\n  $: {\n    const { path: basepath } = $base;\n    routes.update(rs => {\n      rs.forEach(r => (r.path = combinePaths(basepath, r._path)));\n      return rs;\n    });\n  }\n  // This reactive statement will be run when the Router is created\n  // when there are no Routes and then again the following tick, so it\n  // will not find an active Route in SSR and in the browser it will only\n  // pick an active Route after all Routes have been registered.\n  $: {\n    const bestMatch = pick($routes, $location.pathname);\n    activeRoute.set(bestMatch);\n  }\n\n  if (!locationContext) {\n    // The topmost Router in the tree is responsible for updating\n    // the location store and supplying it through context.\n    onMount(() => {\n      const unlisten = globalHistory.listen(history => {\n        location.set(history.location);\n      });\n\n      return unlisten;\n    });\n\n    setContext(LOCATION, location);\n  }\n\n  setContext(ROUTER, {\n    activeRoute,\n    base,\n    routerBase,\n    registerRoute,\n    unregisterRoute\n  });\n</script>\n\n<slot></slot>\n","<script>\n  import { getContext, onDestroy } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n\n  export let path = \"\";\n  export let component = null;\n\n  const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n\n  const route = {\n    path,\n    // If no path prop is given, this Route will act as the default Route\n    // that is rendered if no other Route in the Router is a match.\n    default: path === \"\"\n  };\n  let routeParams = {};\n  let routeProps = {};\n\n  $: if ($activeRoute && $activeRoute.route === route) {\n    routeParams = $activeRoute.params;\n  }\n\n  $: {\n    const { path, component, ...rest } = $$props;\n    routeProps = rest;\n  }\n\n  registerRoute(route);\n\n  // There is no need to unregister Routes in SSR since it will all be\n  // thrown away anyway.\n  if (typeof window !== \"undefined\") {\n    onDestroy(() => {\n      unregisterRoute(route);\n    });\n  }\n</script>\n\n{#if $activeRoute !== null && $activeRoute.route === route}\n  {#if component !== null}\n    <svelte:component this=\"{component}\" location={$location} {...routeParams} {...routeProps}  />\n  {:else}\n    <slot params=\"{routeParams}\" location={$location}></slot>\n  {/if}\n{/if}\n","<script>\n  import { getContext, createEventDispatcher } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n  import { navigate } from \"./history.js\";\n  import { startsWith, resolve, shouldNavigate } from \"./utils.js\";\n\n  export let to = \"#\";\n  export let replace = false;\n  export let state = {};\n  export let getProps = () => ({});\n\n  const { base } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n  const dispatch = createEventDispatcher();\n\n  let href, isPartiallyCurrent, isCurrent, props;\n  $: href = to === \"/\" ? $base.uri : resolve(to, $base.uri);\n  $: isPartiallyCurrent = startsWith($location.pathname, href);\n  $: isCurrent = href === $location.pathname;\n  $: ariaCurrent = isCurrent ? \"page\" : undefined;\n  $: props = getProps({\n    location: $location,\n    href,\n    isPartiallyCurrent,\n    isCurrent\n  });\n\n  function onClick(event) {\n    dispatch(\"click\", event);\n\n    if (shouldNavigate(event)) {\n      event.preventDefault();\n      // Don't push another entry to the history stack when the user\n      // clicks on a Link to the page they are currently on.\n      const shouldReplace = $location.pathname === href || replace;\n      navigate(href, { state, replace: shouldReplace });\n    }\n  }\n</script>\n\n<a href=\"{href}\" aria-current=\"{ariaCurrent}\" on:click=\"{onClick}\" {...props} {...$$restProps}>\n  <slot></slot>\n</a>\n","<script lang=\"ts\">\r\n  import { Link } from \"svelte-routing\";\r\n  export let isLoggedIn: boolean = false;\r\n</script>\r\n\r\n<nav\r\n  class=\"h-[5vh] bg-slate-800 text-white text-lg font-bold flex justify-center align-middle items-center uppercase gap-5\"\r\n>\r\n  <Link to=\"/\" class=\"hover:underline\">Wyniki</Link>\r\n  <a href=\"https://www.youtube.com/@zstv5655/live\" class=\"hover:underline\">\r\n    Transmisja\r\n  </a>\r\n  <Link to=\"/login\" class=\"hover:underline\">login</Link>\r\n  {#if isLoggedIn}\r\n    <Link to=\"/edit\" class=\"hover:underline\">edit</Link>\r\n  {/if}\r\n</nav>\r\n","import { writable } from \"svelte/store\";\r\nexport const user = writable({ field: 0, jwt: \"\" });\r\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","<script lang=\"ts\">\r\n  export let team1: string;\r\n  export let score1: number[];\r\n\r\n  export let team2: string;\r\n  export let score2: number[];\r\n</script>\r\n\r\n<div class=\"md:w-1/2 m-auto text-center rounded-xl bg-slate-600 text-white p-5\">\r\n  <h1 class=\"text-4xl sm:text-7xl uppercase font-bold\">{team1} - {team2}</h1>\r\n  <p class=\"text-6xl sm:text-9xl pt-3\">\r\n    <sup>{score1[0]}</sup>\r\n    {score1[1] > 9 ? score1[1] : \"0\" + score1[1]}\r\n    -\r\n    {score2[1] > 9 ? score2[1] : \"0\" + score2[1]}\r\n    <sup>{score2[0]}</sup>\r\n  </p>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import io from \"socket.io-client\";\r\n  import { user } from \"./../stores\";\r\n  import Match from \"../components/Match.svelte\";\r\n\r\n  let fields = [\r\n    { team1: \"XXX\", team2: \"XXX\", score1: [0, 0], score2: [0, 0] },\r\n    { team1: \"XXX\", team2: \"XXX\", score1: [0, 0], score2: [0, 0] },\r\n    { team1: \"XXX\", team2: \"XXX\", score1: [0, 0], score2: [0, 0] },\r\n  ];\r\n\r\n  let loginData;\r\n\r\n  user.subscribe((val) => (loginData = val));\r\n\r\n  onMount(() => {\r\n    let client = io(\"http://localhost:5000\");\r\n\r\n    client.on(\"score_change\", (msg) => {\r\n      console.log(msg);\r\n      try {\r\n        const fieldData = msg;\r\n        fields = fieldData;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    });\r\n  });\r\n</script>\r\n\r\n<main class=\"w-full min-h-[78vh] md:min-h-[90vh] flex flex-col\">\r\n  {#each fields as field}\r\n    <Match {...field} />\r\n  {/each}\r\n</main>\r\n","<script lang=\"ts\">\r\n  import { user, type User } from \"../stores\";\r\n  import io from \"socket.io-client\";\r\n\r\n  let userData: User;\r\n  user.subscribe((val) => (userData = val));\r\n\r\n  export let team1: string = \"XXX\";\r\n  export let score1: number[] = [0, 0];\r\n\r\n  export let team2: string = \"XXX\";\r\n  export let score2: number[] = [0, 0];\r\n\r\n  let matchBegun = false;\r\n\r\n  let client = io(\"http://localhost:5000\");\r\n\r\n  function updateScore() {\r\n    if (matchBegun) {\r\n      const data = {\r\n        ...userData,\r\n        team1,\r\n        team2,\r\n        score1,\r\n        score2,\r\n      };\r\n      client.send(data);\r\n    }\r\n  }\r\n</script>\r\n\r\n<div class=\"w-full xl:w-1/2 m-auto text-center bg-slate-600 text-black p-5\">\r\n  <h1 class=\"uppercase font-bold\">\r\n    <input type=\"text\" bind:value={team1} on:input={updateScore} />\r\n    -\r\n    <input type=\"text\" bind:value={team2} on:input={updateScore} />\r\n  </h1>\r\n  <p class=\"pt-3\">\r\n    <sup\r\n      ><input\r\n        type=\"number\"\r\n        bind:value={score1[0]}\r\n        on:input={updateScore}\r\n      /></sup\r\n    >\r\n    <input type=\"number\" bind:value={score1[1]} on:input={updateScore} />\r\n    -\r\n    <input type=\"number\" bind:value={score2[1]} on:input={updateScore} />\r\n    <sup\r\n      ><input\r\n        type=\"number\"\r\n        bind:value={score2[0]}\r\n        on:input={updateScore}\r\n      /></sup\r\n    >\r\n  </p>\r\n</div>\r\n\r\n<div\r\n  class=\"w-full xl:w-1/2 m-auto text-center bg-slate-600 text-white text-6xl xl:text-9xl p-5\"\r\n>\r\n  <p class=\"pt-3\">\r\n    <sup\r\n      ><button\r\n        on:click={() => {\r\n          score1[0]++;\r\n          updateScore();\r\n        }}>+</button\r\n      ></sup\r\n    >\r\n    <sup\r\n      ><button\r\n        on:click={() => {\r\n          score1[0]--;\r\n          updateScore();\r\n        }}>-</button\r\n      ></sup\r\n    >\r\n    <button\r\n      on:click={() => {\r\n        score1[1]++;\r\n        updateScore();\r\n      }}>+</button\r\n    >\r\n    <button\r\n      on:click={() => {\r\n        score1[1]--;\r\n        updateScore();\r\n      }}>-</button\r\n    >\r\n    |\r\n    <button\r\n      on:click={() => {\r\n        score2[1]--;\r\n        updateScore();\r\n      }}>-</button\r\n    >\r\n    <button\r\n      on:click={() => {\r\n        score2[1]++;\r\n        updateScore();\r\n      }}>+</button\r\n    >\r\n    <sup\r\n      ><button\r\n        on:click={() => {\r\n          score2[0]--;\r\n          updateScore();\r\n        }}>-</button\r\n      ></sup\r\n    >\r\n    <sup\r\n      ><button\r\n        on:click={() => {\r\n          score2[0]++;\r\n          updateScore();\r\n        }}>+</button\r\n      ></sup\r\n    >\r\n  </p>\r\n</div>\r\n<button\r\n  class=\"w-full block m-auto p-4 {matchBegun ? 'bg-red-500' : 'bg-green-500'}\"\r\n  on:click={() => {\r\n    if (matchBegun) {\r\n      team1 = \"XXX\";\r\n      score1 = [0, 0];\r\n      team2 = \"XXX\";\r\n      score2 = [0, 0];\r\n    }\r\n    updateScore();\r\n\r\n    matchBegun = matchBegun ? false : true;\r\n  }}\r\n>\r\n  {matchBegun ? \"Zakończ mecz\" : \"Rozpocznij Mecz\"}\r\n</button>\r\n","<script lang=\"ts\">\r\n  import EditableMatch from \"../components/EditableMatch.svelte\";\r\n  let random = { team1: \"XXX\", team2: \"XXX\", score1: [0, 0], score2: [0, 0] };\r\n</script>\r\n\r\n<EditableMatch {...random} />\r\n","<script lang=\"ts\">\r\n  import { user } from \"./../stores\";\r\n  import { navigate } from \"svelte-routing\";\r\n\r\n  let code: string;\r\n  let err: string = \"\";\r\n\r\n  async function handleSubmit() {\r\n    const headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n\r\n    let req = await fetch(\"http://localhost:5000/login\", {\r\n      body: JSON.stringify({ password: code }),\r\n      method: \"POST\",\r\n      headers,\r\n      redirect: \"follow\",\r\n    });\r\n    err = \"\";\r\n\r\n    if (!req.ok) {\r\n      err = \"Spróbuj ponownie!\";\r\n      return;\r\n    }\r\n\r\n    let state = await req.json();\r\n    user.set(state);\r\n    navigate(\"/\");\r\n  }\r\n</script>\r\n\r\n<form class=\"w-9/12 md:w-1/2 m-auto\" on:submit|preventDefault={handleSubmit}>\r\n  <p class=\"text-red text-center {err ? 'invisible' : 'visible'}\">\r\n    {err}\r\n  </p>\r\n  <label class=\"text-center text-xl md:text-5xl\" for=\"password\">\r\n    <p class=\"my-6\">Wprowadź kod stanowiska:</p>\r\n  </label>\r\n  <input\r\n    id=\"password\"\r\n    type=\"password\"\r\n    class=\"m-auto my-6 border-slate-900 border block w-full\"\r\n    bind:value={code}\r\n  />\r\n  <button class=\"bg-slate-900 rounded text-white m-auto block w-full\">\r\n    Login\r\n  </button>\r\n</form>\r\n","<script lang=\"ts\">\n  import Nav from \"./components/Nav.svelte\";\n  import { Route, Router } from \"svelte-routing\";\n  import { user, type User } from \"./stores\";\n  import Main from \"./pages/Main.svelte\";\n  import Judge from \"./pages/Judge.svelte\";\n  import Login from \"./pages/Login.svelte\";\n\n  let userData: User;\n\n  user.subscribe((val) => {\n    userData = val;\n  });\n</script>\n\n<Router url={window.location.pathname}>\n  <Nav isLoggedIn={!!userData.jwt} />\n  <div>\n    {#if userData.jwt}\n      <Route path=\"/edit\" component={Judge} />\n    {/if}\n    <Route path=\"/login\" component={Login} />\n    <Route path=\"/\" component={Main} />\n  </div>\n</Router>\n","import App from \"./App.svelte\";\r\nconst app = new App({\r\n    target: document.body,\r\n    props: {},\r\n});\r\nexport default app;\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","to_number","set_data","wholeText","set_input_value","input","construct_svelte_component","current_component","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","cancelable","bubbles","e","createEvent","initCustomEvent","custom_event","call","defaultPrevented","setContext","context","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","Map","skip_bound","root","ready","ret","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","indexOf","splice","$set","$$props","obj","$$set","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","readable","inited","values","pending","cleanup","sync","unsubscribers","LOCATION","ROUTER","getLocation","source","location","state","history","globalHistory","listeners","listener","popstateListener","action","navigate","to","replace","Date","now","replaceState","pushState","createHistory","Boolean","window","initialPathname","stack","pathname","search","states","entries","_","uri","split","createMemorySource","paramRe","SEGMENT_POINTS","STATIC_POINTS","DYNAMIC_POINTS","SPLAT_PENALTY","ROOT_POINTS","startsWith","string","substr","isSplat","segment","segmentize","stripSlashes","str","rankRoute","route","score","default","path","reduce","isRootSegment","test","isDynamic","pick","routes","match","default_","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","params","routeSegments","routeSegment","uriSegment","decodeURIComponent","join","dynamicMatch","exec","addQuery","query","combinePaths","basepath","url","locationContext","routerContext","activeRoute","hasActiveRoute","base","routerBase","registerRoute","$base","_path","matchingRoute","$location","rs","unregisterRoute","bestMatch","$routes","if_block","create_if_block","routeParams","routeProps","$activeRoute","$$invalidate","getProps","dispatch","href","isPartiallyCurrent","isCurrent","toPathname","toQuery","basePathname","toSegments","baseSegments","concat","allSegments","segments","ariaCurrent","button","metaKey","altKey","ctrlKey","shiftKey","shouldNavigate","preventDefault","shouldReplace","nav","isLoggedIn","user","field","jwt","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","withNativeBlob","Blob","prototype","toString","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Emitter","mixin","on","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","cb","emit","args","emitReserved","hasListeners","globalThisShim","self","Function","acc","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","BASE64_OVERHEAD","TransportError","constructor","reason","description","super","Transport","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","details","pause","onPause","alphabet","prev","seed","encode","num","encoded","floor","yeast","encodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","hasXHR2","responseType","Request","method","async","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","requestsCount","requests","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","schema","secure","port","Number","timestampRequests","timestampParam","b64","encodedQuery","hostname","polling","isSSL","protocol","poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","sid","request","req","xhrStatus","pollXhr","re","parts","parse","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","pair","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","freezeTransport","error","onTransportClose","onupgrade","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","utf8Length","ceil","byteLength","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","Socket$1","withNativeFile","File","isBinary","hasBinary","toJSON","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Decoder","reviver","reconstructor","decodeString","isBinaryEvent","BINARY_EVENT","BINARY_ACK","EVENT","ACK","BinaryReconstructor","takeBinaryData","buf","nsp","next","payload","tryParse","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","stringify","deconstruction","unshift","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","_a","ackTimeout","timer","emitWithAck","withErr","reject","arg1","arg2","tryCount","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","sameNamespace","forceNew","multiplex","t4_value","t10_value","div","h1","sup0","sup1","t4","t6","t6_value","t8","t8_value","t10","team1","score1","team2","score2","main","each_blocks","iterations","fields","val","console","log","div0","input0","input1","p0","input2","input3","input4","input5","div1","p1","sup2","button0","sup3","button1","button2","button3","button4","button5","sup4","button6","sup5","button7","button8","t22","t22_value","userData","matchBegun","client","updateScore","form","label","Headers","fetch","body","password","redirect","ok","json","Judge","Login","Main","nav_changes"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}